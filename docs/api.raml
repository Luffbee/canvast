#%RAML 1.0
---
title: CanVAST
baseUri: /{version}
version: v0

types:
  username:
    description: Username
    type: string
    pattern: "^[a-zA-Z][-.@\\w]*$"
    maxLength: 64
    example: "luff_bee@ex-ample.com"

  password:
    description: Password
    type: string
    pattern: "^[-.@\\w]*$"
    minLength: 6
    maxLength: 32
    example: "p4_sS-w@.rD"

  intro:
    description: Brief introduction.
    type: string
    maxLength: 128
    example: "Hello CanVAST!"

  color:
    description: RGBA 256 color
    type: string
    pattern: "^[0-9A-F]{8}$"
    example: "A3A3A3FF"

  pixelpos:
    description: Pixel coordinate
    type: object
    properties:
      x:
        type: integer
        required: true
        format: int64
      y:
        type: integer
        required: true
        format: int64

  offset:
    description: Offset of a pixel from another pixel
    type: object
    properties:
      x:
        type: integer
        required: true
        minimum: -1024
        maximum: 1024
      y:
        type: integer
        required: true
        minimum: -1024
        maximum: 1024

  move:
    description: Movement of a line segment
    type: object
    properties:
      x:
        type: integer
        required: true
        minimum: -2024
        maximum: 2024
      y:
        type: integer
        required: true
        minimum: -2024
        maximum: 2024

  okcnt:
    description: Number of pixels that successfully drawn
    type: object
    properties:
      success_pixels: integer

  failreason:
    description: Reason for a failed request
    type: string

traits:
  secured:
    headers:
      Cookie:
        description: Authentication cookie
        required: true
    responses:
      401:
        description: Unauthorized
        body:
          text/plain:
            type: failreason

  validated:
    responses:
      422:
        description: Invalid data
        body:
          text/plain:
            type: failreason

  query_rect:
    queryParameters:
      x:
        description: X of the left bottom block
        required: true
        type: integer
        format: int64
      y:
        description: Y of the left bottom block
        required: true
        type: integer
        format: int64
      w:
        description: Width of the rectangle
        required: true
        type: integer
        minimum: 0
        maximum: 255
      h:
        description: Height of the rectangle
        required: true
        type: integer
        minimum: 0
        maximum: 255

/user:
  description: User
  post:
    is: [ validated ]
    description: Sign up a new user
    body:
      application/json:
        type: object
        properties:
          name: username
          password: password
    responses:
      200:
        description: Success
      409:
        description: Username has already been used


  /auth:
    description: Authentication of the current user.
    post:
      description: Login
      body:
        application/json:
          type: object
          properties:
            name: username
            password: password
      responses:
        200:
          description: Login success
          headers:
            Set-Cookie:
              description: Authentication cookie
        401:
          description: Login failed
          body:
            text/plain:
              type: failreason
    delete:
      is: [ secured ]
      description: Logout
      responses:
        200:
          description: Logout success

  /location:
    description: A remembered location for transport
    is: [ secured ]
    put:
      description: Remember user location for next login
      is: [ validated ]
      body:
        application/json:
          type: pixelpos
      responses:
        200:
          description: Success

    get:
      description: Retrieve the last remembered location
      responses:
        200:
          description: Success
          body:
            application/json:
              type: pixelpos

/paint:
  description: Paint related operations
  /pixels:
    description: Operations on pixels
    patch:
      description: |
        Draw some pixels with the specified color. 
        Pixels are addressed by base and offsets, the ith pixel is at `base + offsets[i]` .  
      is: [ secured, validated ]
      body:
        application/json:
          type: object
          properties:
            color: color
            base: pixelpos
            offsets:
              type: offset[]
              maxItems: 1024
          example: |
            {
              "color": "A3A3A3FF",
              "base": {"x": 100, "y": -100},
              "offsets": [
                {"x": 0, "y": 0},
                {"x": 1, "y": -1},
                {"x": 2, "y": -1}
              ]
            }
      responses:
        200:
          description: Number of pixels drawn.
          body:
            application/json:
              type: okcnt

  /lines:
    description: Operations on lines
    patch:
      description: Draw continuous line segments with specified color.  
      is: [ secured, validated ]
      body:
        application/json:
          type: object
          properties:
            color: color
            start: pixelpos
            moves:
              type: move[]
          example: |
            {
              "color": "A3A3A3FF",
              "start": {"x": 0, "y": 0},
              "moves": [
                {"x": 5, "y": 0},
                {"x": 0, "y": 15},
                {"x": 10, "y": -5}
              ]
            }
      responses:
        200:
          description: Number of pixels drawn.
          body:
            application/json:
              type: okcnt

  /blocks:
    description: Operations on blocks
    is: [ query_rect, validated ]
    get: 
      description: Retrieve blocks in a rectangle that updated after the specified timestamp.  
      queryParameters:
        ts:
          description: Timestamp, uint64 format.
          required: true
          type: integer
      responses:
        200:
          description: |
            A zipfile containing blocks have been updated after `ts` .  
            Each block will named in `{offset_x}_{offset_y}_{mtime}.png` format.  
            `offset_x` and `offset_y` are offset of the block in the querying rectangle.  
            `mtime` is the last modify time of the block.
          body:
            application/zip:
              type: file
        204:
          description: No block has been updated after `ts` .

    patch:
      description: |
        Set blocks in a rectangle.  

        Request body must be a zipfile which contains `width * height` png files with RGBA 256 color.  
        Each png file should named in `{offset x}_{offset y}.png` format,  
         where `0 <= offset x < width` and `0 <= offset y < height` .  
      is: [ secured ]
      body:
        application/zip:
          type: file
      responses:
        200:
          description: Offsets of blocks that failed to set due to block locks.
          body:
            application/json:
              type: offset[]
              example: |
                  [
                    {"x": 0, "y": 1},
                    {"x": 1, "y": 2}
                  ]

  /locks:
    description: Operations on block locks
    is: [ query_rect ]
    get:
      description: Retrieve lock information in a rectangle
      responses:
        200:
          description: Lock owner names in a 2-dimensional array.
          body:
            application/json:
              type: username[][]
              example: |
                [
                  ["Tom", "cowsay", "ddd"],
                  ["Luffbee", "Sam", "bigBro"]
                ]

    post:
      description: |
        Lock blocks in a rectangle.  
        
        If any block in the rectangle is already locked by others, this operation does nothing.
      is: [ secured ]
      responses:
        200:
          description: Empty array for success, or offsets of blocks already locked by others.
          body:
            application/json:
              type: offset[]
              example: |
                  [
                    {"x": 0, "y": 1},
                    {"x": 1, "y": 2}
                  ]

    delete:
      description: Unlock blocks in a rectangle that already locked by current user
      is: [ secured ]
      responses:
        200:
          description: Offsets unlocked
          body:
            application/json:
              type: offset[]
              example: |
                  [
                    {"x": 0, "y": 1},
                    {"x": 1, "y": 2}
                  ]
